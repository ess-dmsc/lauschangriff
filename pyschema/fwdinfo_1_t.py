# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class fwdinfo_1_t(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsfwdinfo_1_t(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = fwdinfo_1_t()
        x.Init(buf, n + offset)
        return x

    # fwdinfo_1_t
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # fwdinfo_1_t
    def SeqData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # fwdinfo_1_t
    def SeqFwd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # fwdinfo_1_t
    def TsData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # fwdinfo_1_t
    def TsFwd(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # fwdinfo_1_t
    def Fwdix(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # fwdinfo_1_t
    def Teamid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

def fwdinfo_1_tStart(builder): builder.StartObject(6)
def fwdinfo_1_tAddSeqData(builder, seqData): builder.PrependUint64Slot(0, seqData, 0)
def fwdinfo_1_tAddSeqFwd(builder, seqFwd): builder.PrependUint64Slot(1, seqFwd, 0)
def fwdinfo_1_tAddTsData(builder, tsData): builder.PrependUint64Slot(2, tsData, 0)
def fwdinfo_1_tAddTsFwd(builder, tsFwd): builder.PrependUint64Slot(3, tsFwd, 0)
def fwdinfo_1_tAddFwdix(builder, fwdix): builder.PrependUint32Slot(4, fwdix, 0)
def fwdinfo_1_tAddTeamid(builder, teamid): builder.PrependUint64Slot(5, teamid, 0)
def fwdinfo_1_tEnd(builder): return builder.EndObject()
