# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class pos(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAspos(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = pos()
        x.Init(buf, n + offset)
        return x

    # pos
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # pos
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # pos
    def Strip(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # pos
    def Adc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def posStart(builder): builder.StartObject(3)
def posAddTime(builder, time): builder.PrependUint16Slot(0, time, 0)
def posAddStrip(builder, strip): builder.PrependUint16Slot(1, strip, 0)
def posAddAdc(builder, adc): builder.PrependUint16Slot(2, adc, 0)
def posEnd(builder): return builder.EndObject()
